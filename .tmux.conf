# デフォルトの起動シェルをzshに変える
set -g default-command "zsh"
# TERM
set -g default-terminal tmux-256color
set -sa terminal-overrides ',alacritty:RGB'

set-window-option -g mode-keys vi # コピー時のキーバインドをviと同様にする

# Prefix(Ctrl-b) -> Ctrl-s
set-option -g prefix C-s
bind-key C-s send-prefix
unbind-key C-b

# Prefix + r で設定の反映
bind r source-file ~/.tmux.conf

# https://gist.github.com/anonymous/6bebae3eb9f7b972e6f0

set -sg escape-time 1
set -g base-index 1
setw -g pane-base-index 1

#Mouse works as expected
setw -g mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on

# 視覚的に変化を出す
# 例えば、他のwindowで動きがあったときとかに表示してくれる
setw -g monitor-activity on
#set -g visual-activity on

# 確か、コピーモードのときにvimみたいなキーバインドになる
set -g mode-keys vi
set -g history-limit 10000

# y and p as in vim
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

# select copy-command
if-shell 'which xsel'   'set -s copy-command "xsel -i"'
if-shell 'which pbcopy' 'set -s copy-command "pbcopy"'

# extra commands for interacting with the ICCCM clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"


## moving between panes with vim movement keys
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

# moving between windows with vim movement keys
bind -n M-h select-window -t :-
bind -n M-l select-window -t :+

# move window
bind -n M-H run "tmux swap-window -t -1 && tmux previous-window"
bind -n M-L run "tmux swap-window -t +1 && tmux next-window"

# moving between session
bind -n M-j switch-client -n
bind -n M-k switch-client -p

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Open window or pane at the current path
bind c new-window -c '#{pane_current_path}'
bind C new-session -c '#{pane_current_path}'
# easy-to-remember split pane commands
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# Prefix + s でtreeをSでsessionを開く
bind s choose-tree
# bind S-s choose-session

# Prefix + h で synchronize-panes をトグル
bind h setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"

# status lineの設定
## window-status を中央揃えで配置する
set-option -g status-justify "centre"
## デフォルトの色を指定する。
set-option -g status-bg "colour238"
set-option -g status-fg "colour255"
## 左右の最大の長さを指定する。
set-option -g status-left-length 30
set-option -g status-right-length 120
## status line を下に表示
set-option -g status-position bottom
## 左側のフォーマットを指定する。
set-option -g status-left "\
#[bg=colour028,fg=colour234] #S:#h#[default] \
"
## window-status のフォーマットを指定する。
set-window-option -g window-status-format "#[defeault]#I:#W"
## カレントウィンドウの window-status のフォーマットを指定する
set-window-option -g window-status-current-format "\
#[fg=colour255,bg=colour27,bold]#I:#W#[default]\
"
## CPU使用率、メモリの量、時刻を表示
set-option -g status-right "#[fg=colour234]\
#{cpu_bg_color}CPU:#{cpu_percentage}#{ram_bg_color}(#{ram_percentage})\
#[default]#{battery_color_bg} %F%a%T#[default]\
"

# Plugins
## Add Tmux Plugin Manager(TPM)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

## セッションの保存
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on' # 勝手に再開
set -g @resurrect-capture-pane-counts 'on' # プロセスまで保存

### ステータス関連
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'

set -g @cpu_percentage_format "%2.0f"
set -g @ram_percentage_format "%2.0f"

### sidebar
set -g @plugin 'tmux-plugins/tmux-sidebar' # Tree

set -g @sidebar-tree-command 'tree -C'

## Smart vim tmux navigator
set -g @plugin 'christoomey/vim-tmux-navigator'

## keep this line at the very bottom of tmux.conf
run '~/.tmux/plugins/tpm/tpm'
